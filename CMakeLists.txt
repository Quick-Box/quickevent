cmake_minimum_required(VERSION 3.18.4)
project(quickbox LANGUAGES C CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
include(CTest)
set(CMAKE_SHARED_LIBRARY_PREFIX "") # we don't want CMake to prepend "lib" to our libraries, we prefer adding that ourselves
set(USE_QT6 ON CACHE BOOL "Build with Qt6")

if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang" OR CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS "-Wall -Wextra -pedantic ${CMAKE_CXX_FLAGS}")
endif()

if (NOT TARGET libnecrolog)
    add_subdirectory(3rdparty/necrolog)
endif()

if(USE_QT6)
	find_package(Qt6 REQUIRED COMPONENTS Core Widgets Gui Sql Qml Xml LinguistTools PrintSupport Svg SerialPort Multimedia Network Core5Compat)
    set(Qt_FOUND ${Qt6_FOUND})
else()
	find_package(Qt5 REQUIRED COMPONENTS Core Widgets Gui Sql Qml Xml LinguistTools PrintSupport Svg SerialPort Multimedia Network)
    set(Qt_FOUND ${Qt5_FOUND})
endif()

if(Qt_FOUND)
    set(CMAKE_AUTOMOC ON)
    set(CMAKE_AUTOUIC ON)
    set(CMAKE_AUTORCC ON)

    add_subdirectory(libqf)
    add_subdirectory(libsiut)
    add_subdirectory(libquickevent)
    add_subdirectory(quickevent)
    add_subdirectory(quickhttpd)
    add_subdirectory(quickshow)
    add_subdirectory(tools/qsqlmon)
else()
    message(FATAL_ERROR "Qt5 not found")
endif()
